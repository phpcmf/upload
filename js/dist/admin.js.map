{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@cmf/upload/webpack/bootstrap","webpack://@cmf/upload/webpack/runtime/compat get default export","webpack://@cmf/upload/webpack/runtime/define property getters","webpack://@cmf/upload/webpack/runtime/hasOwnProperty shorthand","webpack://@cmf/upload/webpack/runtime/make namespace object","webpack://@cmf/upload/external root \"cmf.core.compat['admin/app']\"","webpack://@cmf/upload/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@cmf/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/Button']\"","webpack://@cmf/upload/external root \"cmf.core.compat['admin/utils/saveSettings']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/Alert']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/Select']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/Switch']\"","webpack://@cmf/upload/external root \"cmf.core.compat['admin/components/UploadImageButton']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/utils/withAttr']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/utils/Stream']\"","webpack://@cmf/upload/external root \"cmf.core.compat['admin/components/ExtensionPage']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/utils/ItemList']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/Modal']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/LoadingIndicator']\"","webpack://@cmf/upload/./src/admin/components/InspectMimeModal.js","webpack://@cmf/upload/external root \"cmf.core.compat['common/helpers/icon']\"","webpack://@cmf/upload/external root \"cmf.core.compat['common/components/Link']\"","webpack://@cmf/upload/./src/admin/components/UploadPage.js","webpack://@cmf/upload/./src/admin/components/index.ts","webpack://@cmf/upload/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['admin/utils/saveSettings'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['admin/components/UploadImageButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/utils/withAttr'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/LoadingIndicator'];","import app from 'cmf/admin/app';\nimport Modal from 'cmf/common/components/Modal';\nimport LoadingIndicator from 'cmf/common/components/LoadingIndicator';\n\nexport default class InspectMimeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.uploading = false;\n    this.inspection = {};\n  }\n\n  className() {\n    return 'Modal--small cmf-upload-inspect-mime-modal';\n  }\n\n  title() {\n    return app.translator.trans('cmf-upload.admin.inspect-mime.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <p>\n          {app.translator.trans('cmf-upload.admin.inspect-mime.description', {\n            a: <a href=\"https://github.com/SoftCreatR/php-mime-detector\"></a>,\n          })}\n        </p>\n        <p>{app.translator.trans('cmf-upload.admin.inspect-mime.select')}</p>\n        <div>\n          <input type=\"file\" onchange={this.onupload.bind(this)} disabled={this.uploading} />\n          {this.uploading ? LoadingIndicator.component() : null}\n        </div>\n        <dl>\n          <dt>{app.translator.trans('cmf-upload.admin.inspect-mime.laravel-validation')}</dt>\n          <dd>\n            {typeof this.inspection.laravel_validation === 'undefined' ? (\n              <em>{app.translator.trans('cmf-upload.admin.inspect-mime.no-file-selected')}</em>\n            ) : this.inspection.laravel_validation ? (\n              app.translator.trans('cmf-upload.admin.inspect-mime.validation-passed')\n            ) : (\n              app.translator.trans('cmf-upload.admin.inspect-mime.validation-failed', {\n                error: this.inspection.laravel_validation_error || '?',\n              })\n            )}\n          </dd>\n        </dl>\n        <dl>\n          <dt>{app.translator.trans('cmf-upload.admin.inspect-mime.mime-detector')}</dt>\n          <dd>\n            {this.inspection.mime_detector ? (\n              <code>{this.inspection.mime_detector}</code>\n            ) : (\n              <em>{app.translator.trans('cmf-upload.admin.inspect-mime.not-available')}</em>\n            )}\n          </dd>\n        </dl>\n        <dl>\n          <dt>{app.translator.trans('cmf-upload.admin.inspect-mime.mime-fileinfo')}</dt>\n          <dd>\n            {this.inspection.php_mime ? (\n              <code>{this.inspection.php_mime}</code>\n            ) : (\n              <em>{app.translator.trans('cmf-upload.admin.inspect-mime.not-available')}</em>\n            )}\n          </dd>\n        </dl>\n        <dl>\n          <dt>{app.translator.trans('cmf-upload.admin.inspect-mime.guessed-extension')}</dt>\n          <dd>\n            {this.inspection.guessed_extension ? (\n              <code>{this.inspection.guessed_extension}</code>\n            ) : (\n              <em>{app.translator.trans('cmf-upload.admin.inspect-mime.not-available')}</em>\n            )}\n          </dd>\n        </dl>\n      </div>\n    );\n  }\n\n  onupload(event) {\n    const body = new FormData();\n\n    for (let i = 0; i < event.target.files.length; i++) {\n      body.append('files[]', event.target.files[i]);\n    }\n\n    this.uploading = true;\n\n    return app\n      .request({\n        method: 'POST',\n        url: app.site.attribute('apiUrl') + '/cmf/upload/inspect-mime',\n        serialize: (raw) => raw,\n        body,\n      })\n      .then((result) => {\n        this.uploading = false;\n        this.inspection = result;\n        m.redraw();\n      })\n      .catch((error) => {\n        this.uploading = false;\n        this.inspection = {};\n        m.redraw();\n\n        throw error;\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = cmf.core.compat['common/components/Link'];","import app from 'cmf/admin/app';\nimport Button from 'cmf/common/components/Button';\nimport saveSettings from 'cmf/admin/utils/saveSettings';\nimport Alert from 'cmf/common/components/Alert';\nimport Select from 'cmf/common/components/Select';\nimport Switch from 'cmf/common/components/Switch';\nimport UploadImageButton from 'cmf/admin/components/UploadImageButton';\nimport withAttr from 'cmf/common/utils/withAttr';\nimport Stream from 'cmf/common/utils/Stream';\nimport ExtensionPage from 'cmf/admin/components/ExtensionPage';\nimport ItemList from 'cmf/common/utils/ItemList';\nimport InspectMimeModal from './InspectMimeModal';\nimport icon from 'cmf/common/helpers/icon';\nimport Link from 'cmf/common/components/Link';\n\n/* global m */\n\nexport default class UploadPage extends ExtensionPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n    // whether we are saving the settings or not right now\n    this.loading = false;\n\n    // the fields we need to watch and to save\n    this.fields = [\n      // image\n      'resizeMaxWidth',\n      'cdnUrl',\n      'maxFileSize',\n      'whitelistedClientExtensions',\n      'composerButtonVisiblity',\n      // watermark\n      'watermark',\n      'watermarkPosition',\n      // Imgur\n      'imgurClientId',\n      // AWS\n      'awsS3Key',\n      'awsS3Secret',\n      'awsS3Bucket',\n      'awsS3Region',\n      'awsS3Endpoint',\n      'awsS3ACL',\n      // QIniu\n      'qiniuKey',\n      'qiniuSecret',\n      'qiniuBucket',\n    ];\n\n    // the checkboxes we need to watch and to save.\n    this.checkboxes = ['mustResize', 'addsWatermarks', 'disableHotlinkProtection', 'disableDownloadLogging', 'awsS3UsePathStyleEndpoint'];\n\n    // fields that are objects\n    this.objects = ['mimeTypes'];\n\n    // watermark positions\n    this.watermarkPositions = {\n      'top-left': 'top-left',\n      'top-right': 'top-right',\n      'bottom-left': 'bottom-left',\n      'bottom-right': 'bottom-right',\n      center: 'center',\n      left: 'left',\n      top: 'top',\n      right: 'right',\n      bottom: 'bottom',\n    };\n\n    // Composer button options\n    this.composerButtonVisiblityOptions = {\n      both: app.translator.trans('cmf-upload.admin.labels.composer_buttons.options.both'),\n      'upload-btn': app.translator.trans('cmf-upload.admin.labels.composer_buttons.options.upload-btn'),\n      'media-btn': app.translator.trans('cmf-upload.admin.labels.composer_buttons.options.media-btn'),\n    };\n\n    // get the saved settings from the database\n    const settings = app.data.settings;\n\n    // our package prefix (to be added to every field and checkbox in the setting table)\n    this.settingsPrefix = 'cmf-upload';\n\n    // Options for the Upload methods dropdown menu.\n    this.uploadMethodOptions = settings[this.addPrefix('availableUploadMethods')] || {};\n    // Options for the Template dropdown menu.\n    this.templateOptions = settings[this.addPrefix('availableTemplates')] || {};\n    // Contains current values.\n    this.values = {};\n    // bind the values of the fields and checkboxes to the getter/setter functions\n    this.fields.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)])));\n    this.checkboxes.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)] === '1')));\n    this.objects.forEach((key) => (this.values[key] = settings[this.addPrefix(key)] ? Stream(JSON.parse(settings[this.addPrefix(key)])) : Stream()));\n\n    // Set a sane default in case no mimeTypes have been configured yet.\n    // Since 'local' (or others) can now be disabled, pick the last entry in the object for default\n    this.defaultAdap = Object.keys(this.uploadMethodOptions)[Object.keys(this.uploadMethodOptions).length - 1];\n    this.values.mimeTypes() ||\n      (this.values.mimeTypes = Stream({\n        '^image\\\\/.*': {\n          adapter: this.defaultAdap,\n          template: 'image-preview',\n        },\n      }));\n\n    this.newMimeType = {\n      regex: Stream(''),\n      adapter: Stream(this.defaultAdap),\n      template: Stream('file'),\n    };\n  }\n\n  /**\n   * Show the actual ImageUploadPage.\n   *\n   * @returns {*}\n   */\n  content() {\n    const max_post = app.data.settings[this.addPrefix('php_ini.post_max_size')];\n    const max_upload = app.data.settings[this.addPrefix('php_ini.upload_max_filesize')];\n    return [\n      m('.UploadPage', [\n        m('.container', [\n          m(\n            'form',\n            {\n              onsubmit: this.onsubmit.bind(this),\n            },\n            [\n              m('fieldset', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.preferences.title')),\n                m('label', app.translator.trans('cmf-upload.admin.labels.preferences.max_file_size')),\n                m('input.FormControl', {\n                  value: this.values.maxFileSize() || 2048,\n                  oninput: withAttr('value', this.values.maxFileSize),\n                  type: 'number',\n                  min: '0',\n                }),\n                m(\n                  '.helpText',\n                  app.translator.trans('cmf-upload.admin.labels.preferences.php_ini_values', {\n                    post: max_post,\n                    upload: max_upload,\n                  })\n                ),\n                m('label', app.translator.trans('cmf-upload.admin.labels.preferences.mime_types')),\n                m(\n                  '.MimeTypes--Container',\n                  Object.keys(this.values.mimeTypes()).map((mime) => {\n                    let config = this.values.mimeTypes()[mime];\n                    // Compatibility for older versions.\n                    if (typeof config !== 'object') {\n                      config = {\n                        adapter: config,\n                        template: 'file',\n                      };\n                    }\n\n                    return m('div', [\n                      m('input.FormControl.MimeTypes', {\n                        value: mime,\n                        oninput: withAttr('value', this.updateMimeTypeKey.bind(this, mime)),\n                      }),\n                      Select.component({\n                        options: this.uploadMethodOptions,\n                        onchange: this.updateMimeTypeAdapter.bind(this, mime, config),\n                        value: config.adapter || 'local',\n                      }),\n                      Select.component({\n                        options: this.getTemplateOptionsForInput(),\n                        onchange: this.updateMimeTypeTemplate.bind(this, mime, config),\n                        value: config.template || 'local',\n                      }),\n                      Button.component(\n                        {\n                          type: 'button',\n                          className: 'Button Button--warning',\n                          onclick: this.deleteMimeType.bind(this, mime),\n                        },\n                        'x'\n                      ),\n                    ]);\n                  }),\n                  m('br'),\n                  m('div', [\n                    m('input.FormControl.MimeTypes.add-MimeType-key', {\n                      value: this.newMimeType.regex(),\n                      oninput: withAttr('value', this.newMimeType.regex),\n                    }),\n                    Select.component({\n                      options: this.uploadMethodOptions,\n                      className: 'add-MimeType-value',\n                      oninput: withAttr('value', this.newMimeType.adapter),\n                      value: this.newMimeType.adapter(),\n                    }),\n                    Select.component({\n                      options: this.getTemplateOptionsForInput(),\n                      className: 'add-MimeType-value',\n                      oninput: withAttr('value', this.newMimeType.template),\n                      value: this.newMimeType.template(),\n                    }),\n                    Button.component(\n                      {\n                        type: 'button',\n                        className: 'Button Button--warning',\n                        onclick: this.addMimeType.bind(this),\n                      },\n                      '+'\n                    ),\n                  ])\n                ),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.mime_types')),\n                Button.component(\n                  {\n                    className: 'Button',\n                    onclick() {\n                      app.modal.show(InspectMimeModal);\n                    },\n                  },\n                  app.translator.trans('cmf-upload.admin.labels.inspect-mime')\n                ),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.download_templates')),\n                this.templateOptionsDescriptions(),\n              ]),\n              m('fieldset.composerButtons', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.composer_buttons.title')),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.composer_buttons')),\n                m('div', [\n                  Select.component({\n                    options: this.composerButtonVisiblityOptions,\n                    onchange: this.values.composerButtonVisiblity,\n                    value: this.values.composerButtonVisiblity() || 'both',\n                  }),\n                ]),\n              ]),\n              m('fieldset', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.resize.title')),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.resize')),\n                Switch.component(\n                  {\n                    state: this.values.mustResize() || false,\n                    onchange: this.values.mustResize,\n                  },\n                  app.translator.trans('cmf-upload.admin.labels.resize.toggle')\n                ),\n                m('label', app.translator.trans('cmf-upload.admin.labels.resize.max_width')),\n                m('input', {\n                  className: 'FormControl',\n                  value: this.values.resizeMaxWidth() || 100,\n                  oninput: withAttr('value', this.values.resizeMaxWidth),\n                  disabled: !this.values.mustResize(),\n                  type: 'number',\n                  min: '0',\n                }),\n              ]),\n              m('fieldset', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.client_extension.title')),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.client_extension')),\n                m('input', {\n                  className: 'FormControl',\n                  value: this.values.whitelistedClientExtensions() || '',\n                  oninput: withAttr('value', this.values.whitelistedClientExtensions),\n                }),\n              ]),\n              m('fieldset', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.watermark.title')),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.watermark')),\n                Switch.component(\n                  {\n                    state: this.values.addsWatermarks() || false,\n                    onchange: this.values.addsWatermarks,\n                  },\n                  app.translator.trans('cmf-upload.admin.labels.watermark.toggle')\n                ),\n                m('label', app.translator.trans('cmf-upload.admin.labels.watermark.position')),\n                m('div', [\n                  Select.component({\n                    options: this.watermarkPositions,\n                    onchange: this.values.watermarkPosition,\n                    value: this.values.watermarkPosition() || 'bottom-right',\n                  }),\n                ]),\n                m('label', {}, app.translator.trans('cmf-upload.admin.labels.watermark.file')),\n                UploadImageButton.component({\n                  name: 'cmf/watermark',\n                }),\n              ]),\n              m('fieldset', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.disable-hotlink-protection.title')),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.disable-hotlink-protection')),\n                Switch.component(\n                  {\n                    state: this.values.disableHotlinkProtection() || false,\n                    onchange: this.values.disableHotlinkProtection,\n                  },\n                  app.translator.trans('cmf-upload.admin.labels.disable-hotlink-protection.toggle')\n                ),\n                m('legend', app.translator.trans('cmf-upload.admin.labels.disable-download-logging.title')),\n                m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.disable-download-logging')),\n                Switch.component(\n                  {\n                    state: this.values.disableDownloadLogging() || false,\n                    onchange: this.values.disableDownloadLogging,\n                  },\n                  app.translator.trans('cmf-upload.admin.labels.disable-download-logging.toggle')\n                ),\n              ]),\n              m('fieldset', [\n                m('legend', app.translator.trans('cmf-upload.admin.labels.local.title')),\n                m('label', app.translator.trans('cmf-upload.admin.labels.local.cdn_url')),\n                m('input.FormControl', {\n                  value: this.values.cdnUrl() || '',\n                  oninput: withAttr('value', this.values.cdnUrl),\n                }),\n              ]),\n\n              this.adaptorItems().toArray(),\n\n              Button.component(\n                {\n                  type: 'submit',\n                  className: 'Button Button--primary',\n                  loading: this.loading,\n                  disabled: !this.changed(),\n                },\n                app.translator.trans('core.admin.settings.submit_button')\n              ),\n            ]\n          ),\n        ]),\n      ]),\n    ];\n  }\n\n  adaptorItems() {\n    const items = new ItemList();\n\n    if (this.uploadMethodOptions['imgur'] !== undefined) {\n      items.add(\n        'imgur',\n        <div className=\"imgur\">\n          <fieldset>\n            <legend>{app.translator.trans('cmf-upload.admin.labels.imgur.title')}</legend>\n            <p>\n              {icon('fas fa-exclamation-circle')}{' '}\n              {app.translator.trans('cmf-upload.admin.labels.imgur.tos', {\n                a: <Link href=\"https://imgur.com/tos\" external={true} target=\"_blank\" />,\n              })}\n            </p>\n            <label>{app.translator.trans('cmf-upload.admin.labels.imgur.client_id')}</label>\n            <input className=\"FormControl\" value={this.values.imgurClientId() || ''} oninput={withAttr('value', this.values.imgurClientId)} />\n          </fieldset>\n        </div>,\n        100\n      );\n    }\n\n    if (this.uploadMethodOptions['qiniu'] !== undefined) {\n      items.add(\n        'qiniu',\n        m('.qiniu', [\n          m('fieldset', [\n            m('legend', app.translator.trans('cmf-upload.admin.labels.qiniu.title')),\n            m('label', app.translator.trans('cmf-upload.admin.labels.qiniu.key')),\n            m('input.FormControl', {\n              value: this.values.qiniuKey() || '',\n              oninput: withAttr('value', this.values.qiniuKey),\n            }),\n            m('label', {}, app.translator.trans('cmf-upload.admin.labels.qiniu.secret')),\n            m('input.FormControl', {\n              value: this.values.qiniuSecret() || '',\n              oninput: withAttr('value', this.values.qiniuSecret),\n            }),\n            m('label', {}, app.translator.trans('cmf-upload.admin.labels.qiniu.bucket')),\n            m('input.FormControl', {\n              value: this.values.qiniuBucket() || '',\n              oninput: withAttr('value', this.values.qiniuBucket),\n            }),\n          ]),\n        ]),\n        80\n      );\n    }\n\n    if (this.uploadMethodOptions['aws-s3'] !== undefined) {\n      items.add(\n        'aws-s3',\n        m('.aws', [\n          m('fieldset', [\n            m('legend', app.translator.trans('cmf-upload.admin.labels.aws-s3.title')),\n            m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.s3_instance_profile')),\n            m('label', app.translator.trans('cmf-upload.admin.labels.aws-s3.key')),\n            m('input.FormControl', {\n              value: this.values.awsS3Key() || '',\n              oninput: withAttr('value', this.values.awsS3Key),\n            }),\n            m('label', app.translator.trans('cmf-upload.admin.labels.aws-s3.secret')),\n            m('input.FormControl', {\n              value: this.values.awsS3Secret() || '',\n              oninput: withAttr('value', this.values.awsS3Secret),\n            }),\n            m('label', app.translator.trans('cmf-upload.admin.labels.aws-s3.bucket')),\n            m('input.FormControl', {\n              value: this.values.awsS3Bucket() || '',\n              oninput: withAttr('value', this.values.awsS3Bucket),\n            }),\n            m('label', app.translator.trans('cmf-upload.admin.labels.aws-s3.region')),\n            m('input.FormControl', {\n              value: this.values.awsS3Region() || '',\n              oninput: withAttr('value', this.values.awsS3Region),\n            }),\n          ]),\n          m('fieldset', [\n            m('legend', app.translator.trans('cmf-upload.admin.labels.aws-s3.advanced_title')),\n            m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.s3_compatible_storage')),\n            m('label', app.translator.trans('cmf-upload.admin.labels.aws-s3.endpoint')),\n            m('input.FormControl', {\n              value: this.values.awsS3Endpoint() || '',\n              oninput: withAttr('value', this.values.awsS3Endpoint),\n            }),\n            Switch.component(\n              {\n                state: this.values.awsS3UsePathStyleEndpoint() || false,\n                onchange: this.values.awsS3UsePathStyleEndpoint,\n              },\n              app.translator.trans('cmf-upload.admin.labels.aws-s3.use_path_style_endpoint')\n            ),\n            m('label', app.translator.trans('cmf-upload.admin.labels.aws-s3.acl')),\n            m('input.FormControl', {\n              value: this.values.awsS3ACL() || '',\n              oninput: withAttr('value', this.values.awsS3ACL),\n            }),\n            m('.helpText', app.translator.trans('cmf-upload.admin.help_texts.s3_acl')),\n          ]),\n        ]),\n        60\n      );\n    }\n\n    return items;\n  }\n\n  getTemplateOptionsForInput() {\n    const options = {};\n\n    for (let option in this.templateOptions) {\n      if (!this.templateOptions.hasOwnProperty(option)) {\n        continue;\n      }\n\n      options[option] = this.templateOptions[option].name;\n    }\n\n    return options;\n  }\n\n  updateMimeTypeKey(mime, value) {\n    this.values.mimeTypes()[value] = this.values.mimeTypes()[mime];\n\n    this.deleteMimeType(mime);\n  }\n\n  updateMimeTypeAdapter(mime, config, value) {\n    config.adapter = value;\n    this.values.mimeTypes()[mime] = config;\n  }\n\n  updateMimeTypeTemplate(mime, config, value) {\n    config.template = value;\n    this.values.mimeTypes()[mime] = config;\n  }\n\n  deleteMimeType(mime) {\n    delete this.values.mimeTypes()[mime];\n  }\n\n  templateOptionsDescriptions() {\n    const children = [];\n\n    for (let template in this.templateOptions) {\n      if (!this.templateOptions.hasOwnProperty(template)) {\n        continue;\n      }\n\n      children.push(\n        <li>\n          {this.templateOptions[template].name}: {m.trust(this.templateOptions[template].description)}\n        </li>\n      );\n    }\n\n    return m('ul', children);\n  }\n\n  addMimeType() {\n    this.values.mimeTypes()[this.newMimeType.regex()] = {\n      adapter: this.newMimeType.adapter(),\n      template: this.newMimeType.template(),\n    };\n\n    this.newMimeType.regex('');\n    this.newMimeType.adapter('local');\n    this.newMimeType.template('file');\n  }\n\n  /**\n   * Checks if the values of the fields and checkboxes are different from\n   * the ones stored in the database\n   *\n   * @returns boolean\n   */\n  changed() {\n    const fieldsCheck = this.fields.some((key) => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n    const checkboxesCheck = this.checkboxes.some((key) => this.values[key]() !== (app.data.settings[this.addPrefix(key)] === '1'));\n    const objectsCheck = this.objects.some((key) => JSON.stringify(this.values[key]()) !== app.data.settings[this.addPrefix(key)]);\n\n    return fieldsCheck || checkboxesCheck || objectsCheck;\n  }\n\n  /**\n   * Saves the settings to the database and redraw the page\n   *\n   * @param e\n   */\n  onsubmit(e) {\n    // prevent the usual form submit behaviour\n    e.preventDefault();\n\n    // if the page is already saving, do nothing\n    if (this.loading) return;\n\n    // prevents multiple savings\n    this.loading = true;\n\n    // remove previous success popup\n    app.alerts.dismiss(this.successAlert);\n\n    const settings = {};\n\n    // gets all the values from the form\n    this.fields.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n    this.checkboxes.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n    this.objects.forEach((key) => (settings[this.addPrefix(key)] = JSON.stringify(this.values[key]())));\n\n    // actually saves everything in the database\n    saveSettings(settings)\n      .then(() => {\n        // on success, show popup\n        this.successAlert = app.alerts.show(Alert, { type: 'success' }, app.translator.trans('core.admin.settings.saved_message'));\n      })\n      .catch(() => {})\n      .then(() => {\n        // return to the initial state and redraw the page\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  /**\n   * Adds the prefix `this.settingsPrefix` at the beginning of `key`\n   *\n   * @returns string\n   */\n  addPrefix(key) {\n    return this.settingsPrefix + '.' + key;\n  }\n}\n","import UploadPage from './UploadPage';\n\nexport const components = {\n  UploadPage,\n};\n","import app from 'cmf/admin/app';\nimport UploadPage from './components/UploadPage';\n\nexport * from './components';\n\napp.initializers.add('cmf-upload', () => {\n  app.extensionData\n    .for('cmf-upload')\n    .registerPage(UploadPage)\n    .registerPermission(\n      {\n        icon: 'far fa-file',\n        label: app.translator.trans('cmf-upload.admin.permissions.upload_label'),\n        permission: 'cmf-upload.upload',\n      },\n      'start',\n      50\n    )\n    .registerPermission(\n      {\n        icon: 'fas fa-download',\n        label: app.translator.trans('cmf-upload.admin.permissions.download_label'),\n        permission: 'cmf-upload.download',\n        allowGuest: true,\n      },\n      'view',\n      50\n    )\n    .registerPermission(\n      {\n        icon: 'fas fa-eye',\n        label: app.translator.trans('cmf-upload.admin.permissions.view_user_uploads_label'),\n        permission: 'cmf-upload.viewUserUploads',\n      },\n      'moderate',\n      50\n    )\n    .registerPermission(\n      {\n        icon: 'fas fa-trash',\n        label: app.translator.trans('cmf-upload.admin.permissions.delete_uploads_of_others_label'),\n        permission: 'cmf-upload.deleteUserUploads',\n      },\n      'moderate',\n      50\n    );\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","cmf","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","InspectMimeModal","_Modal","apply","arguments","_proto","oninit","vnode","this","uploading","inspection","className","title","app","trans","content","m","href","type","onchange","onupload","disabled","LoadingIndicator","laravel_validation","error","laravel_validation_error","mime_detector","php_mime","guessed_extension","event","_this","body","FormData","i","target","files","length","append","method","url","attribute","serialize","raw","then","result","redraw","Modal","UploadPage","_ExtensionPage","loading","fields","checkboxes","objects","watermarkPositions","center","left","top","right","bottom","composerButtonVisiblityOptions","both","settings","settingsPrefix","uploadMethodOptions","addPrefix","templateOptions","values","forEach","Stream","JSON","parse","defaultAdap","keys","mimeTypes","adapter","template","newMimeType","regex","_this2","max_post","max_upload","onsubmit","maxFileSize","oninput","withAttr","min","post","upload","map","mime","config","updateMimeTypeKey","Select","options","updateMimeTypeAdapter","getTemplateOptionsForInput","updateMimeTypeTemplate","Button","onclick","deleteMimeType","addMimeType","show","templateOptionsDescriptions","composerButtonVisiblity","Switch","state","mustResize","resizeMaxWidth","whitelistedClientExtensions","addsWatermarks","watermarkPosition","UploadImageButton","name","disableHotlinkProtection","disableDownloadLogging","cdnUrl","adaptorItems","toArray","changed","items","ItemList","undefined","add","icon","Link","external","imgurClientId","qiniuKey","qiniuSecret","qiniuBucket","awsS3Key","awsS3Secret","awsS3Bucket","awsS3Region","awsS3Endpoint","awsS3UsePathStyleEndpoint","awsS3ACL","option","children","push","trust","description","_this3","fieldsCheck","some","checkboxesCheck","objectsCheck","stringify","e","_this4","preventDefault","dismiss","successAlert","saveSettings","Alert","ExtensionPage","components","registerPage","registerPermission","label","permission","allowGuest"],"sourceRoot":""}